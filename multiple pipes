cat | cat | cat


*pip[0]    *pip[1]

STDIN_FILENO
close (pip[0][0]);
dup2 (pip[0][1], STDOUT_FILENO)
--------------------------------------------
close (pip[0][1]);
dup2 (pip[0][0], STDIN_FILENO);

close (pip[1][0])
dup2 (pip[1][1], STDOUT_FILENO);
---------------------------------------------
close (pip[1][1]);
dup2 (pip[1][0] STDIN_FILENO);

cat | cat | cat

pid_t	pid1 = fork(); //proccess of son1
dup2(pipe1[1], STDOUT_FILENO);
close(pipe1[0]);
close(pipe1[1]);
-----------------
pid_t   pid2 = fork(); //proccess of son2
dup2(pipe1[0], STDIN_FILENO); //last pipe 
dup2(pipe2[1], STDOUT_FILENO); // current pipe
close(pipe1[0]);
close(pipe1[1]);
close(pipe2[0]);
close(pipe2[1]);
-----------------
pid_t   pid3 = fork(); //proccess of son3
dup2(pipe2[0], STDIN_FILENO);
close(pipe2[0]);
close(pipe2[1]);

